name: 'Build, Check, and Install'
inputs:
  package-directory:
    description: '.'
    required: false
    default: '.'

runs:
  using: "composite"
  steps:
  - id: find-working-dir
    run: |
      if [[ ${{ inputs.package-directory }} == "." ]]; then
        echo "::set-output name=pkg-dir::$(echo ${PWD##*/})"
        echo "::set-output name=working-dir::$(echo ${PWD%/*})"
      else
        echo "::set-output name=pkg-dir::$(echo ${{ inputs.package-directory }})"
        echo '::set-output name=working-dir::$(echo "${PWD}")'
      fi
    shell: bash
  - id: install-package
    run: |
      R CMD INSTALL ${{ steps.find-working-dir.outputs.pkg-dir }} > ${{ steps.find-working-dir.outputs.pkg-dir }}.install-out.txt
    shell: bash
    working-directory: ${{ steps.find-working-dir.outputs.working-dir }}
  - id: build-package
    run: |
      R CMD build --keep-empty-dirs --no-resave-data ${{ steps.find-working-dir.outputs.pkg-dir }}
      echo "::set-output name=pkg-tarball::$(echo ${{ steps.find-working-dir.outputs.pkg-dir }}*.tar.gz)"
    shell: bash
    working-directory: "${{ steps.find-working-dir.outputs.working-dir }}"
  - id: check-package
    run: |
      R CMD check --install=check:${{ steps.find-working-dir.outputs.pkg-dir }}.install-out.txt --library="${R_LIBS_USER}" --no-vignettes --timings ${{ steps.build-package.outputs.pkg-tarball }}
    shell: bash
    working-directory: "${{ steps.find-working-dir.outputs.working-dir }}"
