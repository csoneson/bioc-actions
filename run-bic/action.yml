name: 'Install, Build, Check'
author: Mike L. Smith
inputs:
  package-directory:
    description: 'Path to the package directory.  The default value of `.` assumes the git repository is the package. Provide a path if the package is located in a sub-folder.'
    required: false
    default: '.'
outputs:
  source-tarball:
    description: ''
    value: ${{ steps.build-package.outputs.pkg-tarball }}
  check-dir:
    description: ''
    value: ${{ steps.find-working-dir.outputs.pkg-dir }}.Rcheck
runs:
  using: "composite"
  steps:
  - name: Install TinyTex
    uses: r-lib/actions/setup-tinytex@v2
  - name: Install latex fonts
    run: |
      echo ${PATH}
      ls -l /c/Users/runneradmin/AppData/Roaming/TinyTeX/bin/win32
      tlmgr update --self
    shell: bash
  - name: Install latex fonts
    run: |
      tlmgr install courier
    shell: bash
  - id: find-working-dir
    run: |
      if [[ ${{ inputs.package-directory }} == "." ]]; then
        echo "::set-output name=pkg-dir::$(echo ${PWD##*/})"
        echo "::set-output name=working-dir::$(echo '../')"
      else
        echo "::set-output name=pkg-dir::$(echo ${{ inputs.package-directory }})"
        echo "::set-output name=working-dir::$(echo './')"
      fi
    shell: bash
  - id: install-package
    run: |
      R CMD INSTALL ${{ steps.find-working-dir.outputs.pkg-dir }} &> ${{ steps.find-working-dir.outputs.pkg-dir }}.install-out.txt
      cat ${{ steps.find-working-dir.outputs.pkg-dir }}.install-out.txt
    shell: bash
    working-directory: ${{ steps.find-working-dir.outputs.working-dir }}
  - id: build-package
    run: |
      R CMD build --keep-empty-dirs --no-resave-data ${{ steps.find-working-dir.outputs.pkg-dir }}
      echo "::set-output name=pkg-tarball::$(echo ${{ steps.find-working-dir.outputs.pkg-dir }}*.tar.gz)"
    shell: bash
    working-directory: ${{ steps.find-working-dir.outputs.working-dir }}
  - id: check-package
    run: |
      R CMD check --install=check:${{ steps.find-working-dir.outputs.pkg-dir }}.install-out.txt --library="${R_LIBS_USER}" --no-vignettes --timings ${{ steps.build-package.outputs.pkg-tarball }}
    shell: bash
    working-directory: ${{ steps.find-working-dir.outputs.working-dir }}
  - id: build-binary
    run: |
        mkdir ${{ steps.find-working-dir.outputs.pkg-dir }}.buildbin-libdir 
        R CMD INSTALL --build --library=${{ steps.find-working-dir.outputs.pkg-dir }}.buildbin-libdir ${{ steps.build-package.outputs.pkg-tarball }}
    shell: bash
    working-directory: ${{ steps.find-working-dir.outputs.working-dir }}